#N canvas 0 0 1280 700 16;
#X declare -lib zexy;
#X declare -lib zexy;
#X declare -lib zexy;
#X declare -lib iemlib;
#X obj 0 0 icsm_cabecalho;
#X obj 100 200 cnv 15 14 14 empty empty 1.1.6_Teorema_de_Nyquist_e_rebatimento
0 0 0 34 -262144 -38 0;
#N canvas 0 0 1280 700 icsm116A 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116A vis 1;
#N canvas 0 0 1280 700 icsm116B 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116B vis 1;
#N canvas 0 0 1280 700 icsm116C 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116C vis 1;
#N canvas 0 0 1280 700 icsm116D 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116D vis 1;
#N canvas 0 0 1280 700 icsm116E 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116E vis 1;
#N canvas 0 0 1280 700 icsm116F 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116F vis 1;
#N canvas 0 0 1280 700 icsm116G 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116G vis 1;
#N canvas 0 0 1280 700 icsm116H 0;
#X text 6 801 continua:;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116H vis 1;
#X obj 100 80 cnv 15 14 14 empty empty Experimento_com_rebatimento_de_harmônicos_de_sinais_distorcidos
0 0 0 24 -262144 -38 0;
#X obj 106 463 hsl 1065 15 -22050 22050 0 0 \$0_116H_freq_r2 \$0_116H_freq_r
empty -2 -8 0 10 -262144 -1 -1 53200 1;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116H_frequências_rebatidas 1000 float 2;
#X coords 0 500 1000 0 1070 200 1 0 0;
#X restore 103 235 graph;
#X text 633 436 0;
#X text 59 375 5512;
#X text 89 420 0;
#X obj 689 551 vradio 20 1 0 4 \$0_116H_subamostra \$0_116H_subamostra_r
Amostragem 0 -16 0 16 -262144 -1 -1 0;
#X text 711 569 22050;
#X text 711 549 44100;
#X obj 103 510 icsm_dsp;
#X floatatom 603 484 8 0 0 1 Hz #0_116H_freq_r2 #0_116H_freq;
#X obj 392 524 hsl 128 20 0.001 1 1 0 empty \$0_116H_vol_r Volume -2
-8 0 16 -262144 -1 -1 0 0;
#X floatatom 389 548 8 0 1 0 - - #0_116H_vol;
#X text 375 523 0;
#X text 523 523 1;
#X text 711 589 14700;
#X text 49 223 22050;
#X text 49 327 11025;
#X text 59 355 7350;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116H_frequências_rebatidas_ 2048 float 0;
#X coords 0 0.5 2047 0 1070 200 1 0 0;
#X restore 103 235 graph;
#X text 1146 436 22050;
#X text 882 436 11025;
#X text 339 436 -11025;
#X text 69 436 -22050;
#N canvas 0 0 610 309 \$0_116H_calcula_frequências_rebatidas 0;
#X obj 41 21 loadbang;
#X msg 41 50 1;
#X obj 139 46 r \$0_116H_subamostra;
#X obj 41 90 ofelia f \; local x=ofArray("\$0_116H_frequências_rebatidas")
\; local N=x:getSize() \; --[[ adequa taxa de amostragem à subamostragem
]] \; R = N/(a+1) \; for i = 0 \, N-1 do \; f=i-N/2 \; x[i]=math.abs(f-math.floor(0.5+f/R)*R)
\; end;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X restore 769 211 pd \$0_116H_calcula_frequências_rebatidas;
#N canvas 0 0 663 705 \$0_116H_sintetiza 0;
#X obj 63 689 dac~;
#X obj 173 511 declare -lib zexy;
#X obj 63 511 multiplex~;
#X obj 210 327 phasor~;
#X obj 123 366 samphold~;
#X obj 124 437 hip~ 5;
#X obj 124 399 iemlib/lp8_butt~;
#X text 354 224 recebe valor do seletor: n=0: não reamostra n=1/2/3/4:
define R=44100/(n+1), f 25;
#X obj 97 254 expr if ($f1==0 \, 0 \, 1) \; 44100/($f1+1) \; 44100/($f1+1)/2
\;;
#X obj 63 640 *~;
#X obj 108 580 pack f 100;
#X obj 108 609 line~;
#X obj 63 53 pack f 100;
#X obj 63 82 line~;
#X text 220 24 suaviza os valores de frequência recebidos pelo slider
\, criando variações "contínuas" (interpolação no nível das amostras).
, f 35;
#X text 250 551 suaviza os valores de volume recebidos pelo slider.
, f 28;
#X text 297 327 varredura com frequência R;
#X text 227 366 "amostra e segura" com frequência R;
#X text 297 399 passa-baixa com corte R/2;
#X text 197 437 elimina artefatos próximos de 0 Hz;
#X obj 63 148 osc~;
#X obj 63 24 r \$0_116H_freq;
#X obj 97 225 r \$0_116H_subamostra;
#X obj 108 551 r \$0_116H_vol;
#X obj 63 185 expr~ pow($v1 \, $f2);
#X obj 250 119 r \$0_116H_distorção;
#X obj 181 631 loadbang;
#X obj 181 660 metro 200;
#X obj 181 689 tabwrite~ \$0_116H_sinal;
#N canvas 0 0 589 341 mágica 0;
#X obj 41 91 fft~;
#X obj 41 120 cyclone/cartopol~;
#X obj 41 199 tabwrite~ \$0_116H_frequências_rebatidas_;
#X obj 261 62 loadbang;
#X obj 261 91 metro 200;
#X obj 41 62 inlet~;
#X obj 398 59 block~ 2048;
#X obj 41 149 /~ 2048;
#X msg 261 127 start 1024;
#X obj 41 239 tabwrite~ \$0_116H_frequências_rebatidas__;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 5 0 0 0;
#X connect 7 0 2 0;
#X connect 7 0 9 0;
#X connect 8 0 2 0;
#X connect 8 0 9 0;
#X restore 62 816 pd mágica;
#X obj 250 148 expr round($f1)*2+1;
#X connect 2 0 9 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 2 1;
#X connect 6 0 5 0;
#X connect 8 0 2 0;
#X connect 8 1 3 0;
#X connect 8 2 6 1;
#X connect 9 0 0 0;
#X connect 9 0 0 1;
#X connect 9 0 28 0;
#X connect 9 0 29 0;
#X connect 10 0 11 0;
#X connect 11 0 9 1;
#X connect 12 0 13 0;
#X connect 13 0 20 0;
#X connect 20 0 24 0;
#X connect 21 0 12 0;
#X connect 22 0 8 0;
#X connect 23 0 10 0;
#X connect 24 0 2 0;
#X connect 24 0 4 0;
#X connect 25 0 30 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 30 0 24 1;
#X restore 103 587 pd \$0_116H_sintetiza;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116H_sinal 441 float 0;
#X coords 0 1 440 -1 300 140 1 0 0;
#X restore 873 521 graph;
#X obj 392 604 hsl 128 20 0 10 0 0 \$0_116H_distorção \$0_116H_distorção_r
Distorção -2 -8 0 16 -262144 -1 -1 0 1;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116H_frequências_rebatidas__ 2048 float 0;
#X coords 2047 0.5 0 0 1070 200 1 0 0;
#X restore 103 235 graph;
#X text 374 624 min;
#X text 504 624 max;
#N canvas 0 0 527 332 init 0;
#X obj 57 44 loadbang;
#X obj 57 73 f \$0;
#X obj 210 11 r pd;
#X obj 210 40 route dsp;
#X obj 210 69 sel 0;
#X msg 57 103 \; \$1_116H_freq_r 0 \; \$1_116H_vol_r 0 \; \$1_116H_subamostra_r
0 \; \$1_116H_distorção_r 0 \; \$1_116H_sinal const 0 \; \$1_116H_frequências_rebatidas_
const 0 \; \$1_116H_frequências_rebatidas__ const 0;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X restore 1184 814 pd init;
#X text 711 609 11025;
#X text 100 110 Nesse experimento um sinal senoidal é submetido a
uma transformação da forma y[n] = x[n]^k \, onde k é um expoente
ímpar definido pelo controle deslizante "Distorção". Observe como
a distorção da forma de onda faz surgir harmônicos novos no sinal
\, que por sua vez estão sujeitos aos efeitos do rebatimento à medida
em que extrapolam a faixa de frequências representáveis., f 107
;
#N canvas 0 0 818 309 icsm116H+ 0;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116H+ vis 1;
#X text 66 51 No caso da distorção de uma forma de onda \, embora
seja fácil prever o efeito do rebatimento dos harmônicos \, não
é tão fácil preveni-los (como no caso da síntese da onda quadrada).
Uma solução sofisticada poderia superamostrar o sinal original (por
exemplo com uma taxa de amostragem de 200000 Hz) \, realizar a distorção
nesse domínio (onde os harmônicos até 100000 Hz não teriam sido
rebatidos \, e os demais teriam amplitudes inaudíveis após o rebatimento)
\, para em seguida filtrar (com um passa-baixas em 20000 Hz) \, e finalmente
subamostrar o resultado na taxa desejada (por exemplo R=44100)., f
67;
#X text 6 801 +detalhes(*):;
#X connect 0 0 1 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 103 625 pd icsm116H+;
#X connect 1 0 2 0;
#X connect 14 0 15 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116H;
#X obj 100 80 cnv 15 14 14 empty empty Experimento_com_rebatimento_de_harmônicos_de_sinais_sintéticos
0 0 0 24 -262144 -38 0;
#X obj 106 463 hsl 1065 15 -22050 22050 0 0 \$0_116G_freq_r2 \$0_116G_freq_r
empty -2 -8 0 10 -262144 -1 -1 53200 1;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116G_frequências_rebatidas 1000 float 2;
#X coords 0 500 1000 0 1070 200 1 0 0;
#X restore 103 235 graph;
#X text 633 436 0;
#X text 59 375 5512;
#X text 89 420 0;
#X obj 879 551 vradio 20 1 0 4 \$0_116G_subamostra \$0_116G_subamostra_r
Amostragem 0 -16 0 16 -262144 -1 -1 0;
#X text 901 569 22050;
#X text 901 549 44100;
#X obj 103 530 icsm_dsp;
#X floatatom 603 484 8 0 0 1 Hz #0_116G_freq_r2 #0_116G_freq;
#X obj 271 534 hsl 128 20 0.001 1 1 0 empty \$0_116G_vol_r Volume -2
-8 0 16 -262144 -1 -1 0 0;
#X floatatom 268 558 8 0 1 0 - - #0_116G_vol;
#X text 254 533 0;
#X text 402 533 1;
#X text 901 609 11025;
#X text 901 589 14700;
#X text 49 223 22050;
#X text 49 327 11025;
#X text 59 355 7350;
#N canvas 0 0 1159 467 \$0_116G_calcula_frequências_rebatidas 0;
#X obj 41 21 loadbang;
#X msg 41 50 1;
#X obj 139 46 r \$0_116G_subamostra;
#X obj 581 26 r \$0_116G_freq;
#X obj 739 26 r \$0_116G_subamostra;
#X obj 581 135 pack f 0;
#X msg 692 116 \; \$1_116G_frequências_rebatidas_ const 0;
#X obj 581 55 t f b;
#X obj 692 87 f \$0;
#X obj 41 90 ofelia f \; local x=ofArray("\$0_116G_frequências_rebatidas")
\; local N=x:getSize() \; --[[ adequa taxa de amostragem à subamostragem
]] \; R = N/(a+1) \; for i = 0 \, N-1 do \; f=i-N/2 \; x[i]=math.abs(f-math.floor(0.5+f/R)*R)
\; end;
#X obj 581 170 ofelia f \; local x=ofArray("\$0_116G_frequências_rebatidas_")
\; local N=x:getSize() \; --[[ adequa taxa de amostragem à subamostragem
]] \; R = N/(a[2]+1) \; for i = 1 \, 40 do \; f=N*i*a[1]/44100 \; f=f-math.floor(0.5+f/R)*R
\; x[N/2+math.floor(f)]=(N/2)/i \; x[N/2-math.floor(f)]=(N/2)/i \;
end;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 9 0;
#X connect 3 0 7 0;
#X connect 4 0 5 1;
#X connect 5 0 10 0;
#X connect 7 0 5 0;
#X connect 7 1 8 0;
#X connect 8 0 6 0;
#X restore 769 211 pd \$0_116G_calcula_frequências_rebatidas;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116G_frequências_rebatidas_ 1000 float 0;
#X coords 0 500 999 0 1070 200 1 0 0;
#X restore 103 235 graph;
#N canvas 0 0 661 705 \$0_116G_sintetiza 0;
#X obj 63 652 dac~;
#X obj 173 474 declare -lib zexy;
#X obj 63 474 multiplex~;
#X obj 210 290 phasor~;
#X obj 123 329 samphold~;
#X obj 124 400 hip~ 5;
#X obj 124 362 iemlib/lp8_butt~;
#X text 354 187 recebe valor do seletor: n=0: não reamostra n=1/2/3/4:
define R=44100/(n+1), f 25;
#X obj 97 217 expr if ($f1==0 \, 0 \, 1) \; 44100/($f1+1) \; 44100/($f1+1)/2
\;;
#X obj 63 603 *~;
#X obj 108 543 pack f 100;
#X obj 108 572 line~;
#X obj 63 53 pack f 100;
#X obj 63 82 line~;
#X text 220 24 suaviza os valores de frequência recebidos pelo slider
\, criando variações "contínuas" (interpolação no nível das amostras).
, f 35;
#X text 250 514 suaviza os valores de volume recebidos pelo slider.
, f 28;
#X text 297 290 varredura com frequência R;
#X text 227 329 "amostra e segura" com frequência R;
#X text 297 362 passa-baixa com corte R/2;
#X text 197 400 elimina artefatos próximos de 0 Hz;
#X obj 63 111 osc~;
#X obj 63 148 sgn~;
#X text 120 150 onda quadrada;
#X obj 63 24 r \$0_116G_freq;
#X obj 108 514 r \$0_116G_vol;
#X obj 97 188 r \$0_116G_subamostra;
#X obj 261 581 loadbang;
#X obj 261 610 metro 200;
#X obj 261 639 tabwrite~ \$0_116G_sinal;
#X connect 2 0 9 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 2 1;
#X connect 6 0 5 0;
#X connect 8 0 2 0;
#X connect 8 1 3 0;
#X connect 8 2 6 1;
#X connect 9 0 0 0;
#X connect 9 0 0 1;
#X connect 9 0 28 0;
#X connect 10 0 11 0;
#X connect 11 0 9 1;
#X connect 12 0 13 0;
#X connect 13 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 2 0;
#X connect 21 0 4 0;
#X connect 23 0 12 0;
#X connect 24 0 10 0;
#X connect 25 0 8 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X restore 103 617 pd \$0_116G_sintetiza;
#X text 1146 436 22050;
#X text 882 436 11025;
#X text 339 436 -11025;
#X text 69 436 -22050;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116G_sinal 441 float 0;
#X coords 0 1 440 -1 300 140 1 0 0;
#X restore 493 541 graph;
#X text 100 110 Aqui podemos explorar um sinal sintético de onda quadrada
\, cuja composição senoidal (seu "espectro") é distribuída sobre
uma série harmônica da forma F0 \, 2F0 \, 3F0 \, ... e é visualizada
sobreposta ao padrão de rebatimento das frequências. Mesmo sem subamostragem
\, é possível perceber que ao variar a frequência F0 \, partes do
som (os harmônicos) parecem se deslocar de forma independente., f
107;
#N canvas 0 0 368 293 init 0;
#X obj 57 44 loadbang;
#X obj 57 73 f \$0;
#X obj 210 11 r pd;
#X obj 210 40 route dsp;
#X obj 210 69 sel 0;
#X msg 57 113 \; \$1_116G_freq_r 0 \; \$1_116G_vol_r 0 \; \$1_116G_subamostra_r
0 \; \$1_116G_sinal const 0 \; \$1_116G+_freq_r 0 \; \$1_116G+_vol_r
0 \;;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X restore 1184 814 pd init;
#N canvas 0 0 1280 700 icsm116G+ 0;
#X obj 139 803 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X msg 189 801 \; pd-icsm116G+ vis 1;
#N canvas 0 0 852 631 (subpatch) 0;
#X array \$0_116G+_quadrada 1027 float 2;
#X coords 0 1 1027 -1 280 180 1 0 0;
#X restore 884 349 graph;
#X text 6 801 +detalhes(*):;
#X text 90 44 Como poderemos constatar futuramente \, uma forma de
onda quadrada de frequência fundamental f Hz possui uma representação
senoidal da forma:, f 107;
#X text 390 104 x(t) = Σ (1/k)·sen(2πkft) para k=1 \, 3 \, 5 \,
...;
#X text 90 144 Assim \, independentemente da frequência f \, essa
forma de onda possui infinitos harmônicos e não pode ser representada
de forma exata de forma digital: sempre é possível amostrar a expressão
analógica fazendo, f 107;
#X text 390 204 x[n] = x(n/R) para n=0 \, 1 \, 2 \, ...;
#X text 90 244 mas o resultado é aquele observado anteriormente: todos
os harmônicos que extrapolem a condição de Nyquist (|kf|>=R/2) serão
representados incorretamente \, sendo indistinguíveis de seus representantes
"naturais" no intervalo [-R/2 \, +R/2)., f 107;
#N canvas 0 0 1252 339 \$0_116G+_interface 0;
#X obj 302 185 icsm_dsp;
#X obj 70 262 *~;
#X obj 70 291 dac~;
#X obj 73 195 hsl 128 20 0.001 1 1 0 empty \$0_116G+_vol_r Volume -2
-8 0 16 -262144 -1 -1 0 0;
#X obj 73 150 hsl 128 20 20 20000 1 0 empty \$0_116G+_freq_r Frequência
-2 -8 0 16 -262144 -1 -1 0 0;
#X floatatom 211 149 8 0 0 1 Hz - -;
#X obj 70 234 tabosc4~ \$0_116G+_quadrada;
#X text 653 244 versão com 3 harmônicos ímpares (até 4410 Hz):
;
#X text 651 150 versão com 5 harmônicos ímpares (até 2450 Hz):
;
#X obj 70 65 vradio 20 1 0 3 empty empty empty 0 -8 0 10 -262144 -1
-1 0;
#X text 99 63 10 harmônicos (até 1160 Hz);
#X text 99 83 5 harmônicos (até 2450 Hz);
#X text 99 103 3 harmônicos (até 4410 Hz);
#X obj 454 51 route 0 1 2;
#X obj 70 9 loadbang;
#X msg 70 35 0;
#X text 651 40 versão com 10 harmônicos ímpares (até 1160 Hz):
;
#X obj 454 19 pack f \$0;
#X msg 653 63 \; \$1_116G+_quadrada sinesum 1024 1 0 0.3333 0 0.2 0
0.14286 0 0.11111 0 0.090909 0 0.076923 0 0.066667 0 0.058824 0 0.052632
\;, f 54;
#X msg 653 173 \; \$1_116G+_quadrada sinesum 1024 1 0 0.3333 0 0.2
0 0.14286 0 0.11111 \;, f 54;
#X msg 653 266 \; \$1_116G+_quadrada sinesum 1024 1 0 0.3333 0 0.2
;
#X connect 1 0 2 0;
#X connect 1 0 2 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X connect 9 0 17 0;
#X connect 13 0 18 0;
#X connect 13 1 19 0;
#X connect 13 2 20 0;
#X connect 14 0 15 0;
#X connect 15 0 9 0;
#X connect 17 0 13 0;
#X coords 0 -1 1 1 340 180 2 50 50;
#X restore 534 349 pd \$0_116G+_interface;
#X text 90 324 A única forma "limpa" de lidar com sinais sintéticos
que possuem infinitos harmônicos em contexto digital é substituí-los
por suas versões de "banda limitada" \, ou seja \, incluindo na representação
apenas aqueles harmônicos que respeitam a condição |kf|<R/2. O exemplo
a seguir mostra três versões de banda limitada da onda quadrada \,
com 10 harmônicos ímpares (k=1 \, 3 \, ... \, 19) \, 5 (k=1 \, 3
\, 5 \, 7 \, 9) e com 3 (k=1 \, 3 \, 5) \, e seus respectivos "limites
de segurança" (R/2)/max(k). Quanto mais harmônicos pudermos incluir
"corretamente" \, mais próximo de uma onda quadrada "verdadeira" será
o timbre resultante., f 41;
#X connect 0 0 1 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 550 pd icsm116G+;
#X connect 1 0 2 0;
#X connect 15 0 16 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116G;
#X obj 100 80 cnv 15 14 14 empty empty Experimento_com_rebatimento_de_sinais_senoidais
0 0 0 24 -262144 -38 0;
#X obj 106 463 hsl 1065 15 -44100 44100 0 0 \$0_116F_freq_r2 \$0_116F_freq_r
empty -2 -8 0 10 -262144 -1 -1 53200 1;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116F_frequências_rebatidas 1000 float 2;
#X coords 0 250 1000 0 1070 200 1 0 0;
#X restore 103 235 graph;
#X text 633 436 0;
#N canvas 0 0 641 302 \$0_116F_calcula_frequências_rebatidas 0;
#X obj 41 21 loadbang;
#X obj 139 46 r \$0_116F_subamostra;
#X msg 41 50 1;
#X obj 41 90 ofelia f \; local x=ofArray("\$0_116F_frequências_rebatidas")
\; local N=x:getSize() \; --[[ adequa taxa de amostragem à subamostragem
]] \; R = (N/2)/(a+1) \; for i = 0 \, N-1 do \; x[i]=math.abs(i-math.floor(0.5+i/R)*R)
\; end;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X restore 769 211 pd \$0_116F_calcula_frequências_rebatidas;
#X text 69 436 -44100;
#X text 339 436 -22050;
#X text 882 436 22050;
#X text 1146 436 44100;
#X text 59 375 5512;
#X text 89 420 0;
#X obj 799 551 vradio 20 1 0 4 \$0_116F_subamostra \$0_116F_subamostra_r
Amostragem 0 -16 0 16 -262144 -1 -1 0;
#X text 821 569 22050;
#X text 821 549 44100;
#X obj 103 530 icsm_dsp;
#N canvas 0 0 661 705 \$0_116F_sintetiza 0;
#X obj 63 118 osc~;
#X obj 63 622 dac~;
#X obj 173 444 declare -lib zexy;
#X obj 63 444 multiplex~;
#X obj 210 260 phasor~;
#X obj 123 299 samphold~;
#X obj 124 370 hip~ 5;
#X obj 97 158 r \$0_116F_subamostra;
#X obj 124 332 iemlib/lp8_butt~;
#X text 354 157 recebe valor do seletor: n=0: não reamostra n=1/2/3/4:
define R=44100/(n+1), f 25;
#X obj 97 187 expr if ($f1==0 \, 0 \, 1) \; 44100/($f1+1) \; 44100/($f1+1)/2
\;;
#X obj 63 573 *~;
#X obj 108 484 r \$0_116F_vol;
#X obj 108 513 pack f 100;
#X obj 108 542 line~;
#X obj 63 53 pack f 100;
#X obj 63 82 line~;
#X obj 63 24 r \$0_116F_freq;
#X text 220 24 suaviza os valores de frequência recebidos pelo slider
\, criando variações "contínuas" (interpolação no nível das amostras).
, f 35;
#X text 250 484 suaviza os valores de volume recebidos pelo slider.
, f 28;
#X text 297 260 varredura com frequência R;
#X text 227 299 "amostra e segura" com frequência R;
#X text 297 332 passa-baixa com corte R/2;
#X text 197 370 elimina artefatos próximos de 0 Hz;
#X connect 0 0 3 0;
#X connect 0 0 5 0;
#X connect 3 0 11 0;
#X connect 4 0 5 1;
#X connect 5 0 8 0;
#X connect 6 0 3 1;
#X connect 7 0 10 0;
#X connect 8 0 6 0;
#X connect 10 0 3 0;
#X connect 10 1 4 0;
#X connect 10 2 8 1;
#X connect 11 0 1 0;
#X connect 11 0 1 1;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 11 1;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 17 0 15 0;
#X restore 103 587 pd \$0_116F_sintetiza;
#X obj 980 97 declare -lib iemlib;
#X text 980 56 dependência adicional:, f 11;
#X floatatom 603 484 8 0 0 1 Hz #0_116F_freq_r2 #0_116F_freq;
#X obj 381 534 hsl 128 20 0.001 1 1 0 empty \$0_116F_vol_r Volume -2
-8 0 16 -262144 -1 -1 0 0;
#X floatatom 378 558 8 0 1 0 - - #0_116F_vol;
#X text 364 533 0;
#X text 512 533 1;
#X text 821 609 11025;
#X text 821 589 14700;
#X text 49 223 22050;
#X text 49 327 11025;
#X text 59 355 7350;
#X text 100 130 Aqui uma estratégia de subamostragem do tipo "SAMPLE
AND HOLD" é usada de forma análoga à da conversão DA para simular
o efeito de subamostragem \, resultando em taxas de amostragem da forma
R=44100/N \, a fim de ilustrar os padrões de rebatimento e as frequências
aparentes nesses cenários., f 107;
#N canvas 0 0 338 215 init 0;
#X obj 57 44 loadbang;
#X obj 57 73 f \$0;
#X obj 210 11 r pd;
#X obj 210 40 route dsp;
#X obj 210 69 sel 0;
#X msg 57 113 \; \$1_116F_freq_r 0 \; \$1_116F_vol_r 0 \; \$1_116F_subamostra_r
0;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X restore 1184 814 pd init;
#X connect 1 0 2 0;
#X connect 23 0 24 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116F;
#X obj 100 80 cnv 15 14 14 empty empty Rebatimento_do_ponto_de_escuta_perceptual
0 0 0 24 -262144 -38 0;
#X text 100 130 Uma componente senoidal de frequência f \, possivelmente
rebatida em uma frequência equivalente f-kR \, será percebida de
acordo com a quantidade de períodos por segundo \, independentemente
de ser uma frequência positiva ou negativa. Por exemplo \, uma componente
senoidal com frequência acima do limite de Nyquist R/2 \, digamos
R/2+ε \, será equivalente algebricamente à frequência R/2+ε-R
= -R/2+ε \, e perceptualmente indistinguível de um sinal com frequência
R/2-ε (no caso do cosseno a identidade cos(-x)=cos(x) faz com que
os sinais de frequência -R/2+ε e R/2-ε sejam idênticos \, enquanto
no caso do seno \, que satisfaz sen(-x)=-sen(x) \, teríamos sen(2π(-R/2+ε)n/R)
= -sen(2π(R/2-ε)n/R) \, onde a troca de sinal também é perceptualmente
irrelevante)., f 107;
#N canvas 0 0 450 250 (subpatch) 0;
#X array \$0_116E_frequências_rebatidas 1000 float 2;
#X coords 0 250 1000 0 1070 140 1 0 0;
#X restore 103 435 graph;
#X text 89 575 -R;
#X text 349 575 -R/2;
#X text 633 575 0;
#X text 892 575 R/2;
#X text 1166 575 R;
#N canvas 0 0 641 226 \$0_116E_calcula_frequências_rebatidas 0;
#X obj 41 21 loadbang;
#X obj 41 50 ofelia f \; local x=ofArray("\$0_116E_frequências_rebatidas")
\; local N=x:getSize() \; for i = 0 \, N-1 do \; --[[ considera R=N/2
e percorre intervalo de 0 a 2R ]] \; x[i]=math.abs(i-math.floor(0.5+i/(N/2))*(N/2))
\; end;
#X connect 0 0 1 0;
#X restore 769 411 pd \$0_116E_calcula_frequências_rebatidas;
#X text 100 300 Em outras palavras \, a partir de R/2 Hz as componentes
senoidais são rebatidas em frequências equivalentes progressivamente
mais baixas do ponto de vista perceptual \, até chegar na frequência
R Hz que é rebatida em 0 Hz. A partir desse ponto \, as frequências
voltam a subir progressivamente (R+ε é rebatida em ε). O gráfico
abaixo mostra como as frequências f entre -R e R são rebatidas em
seus equivalentes perceptuais através da fórmula f-round(f/R)·R
(esse padrão se repete periodicamente fora desse intervalo)., f 107
;
#X connect 1 0 2 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116E;
#X obj 100 80 cnv 15 14 14 empty empty Rebatimento_do_ponto_de_vista_algébrico
0 0 0 24 -262144 -38 0;
#X text 100 130 Uma senoide digitalizada é uma função de tempo discreto
com expressão x[n] = α·cos(2πfn/R+φ). Se considerarmos uma frequência
g=f+kR (com k inteiro) \, a expressão anterior fica:, f 107;
#X text 490 199 y[n] = α·cos(2πgn/R+φ);
#X text 540 219 = α·cos(2π(f+kR)n/R+φ) = α·cos(2πfn/R+2πkn+φ)
= α·cos(2πfn/R+φ), f 22;
#X text 540 277 = x[n], f 22;
#X text 100 330 Isso mostra que é IMPOSSÍVEL distinguir as senoides
x[n] e y[n] de frequências f e f+kR \, pois elas geram exatamente
os mesmos valores quando são amostradas R vezes por segundo. Podemos
dizer que as senoides com frequências ... \, f-3R \, f-2R \, f-R \,
f \, f+R \, f+2R \, f+3R \, ... pertencem a uma mesma CLASSE DE EQUIVALÊNCIA
\, no sentido de gerarem todas o mesmo sinal digital quando amostradas
a R Hz., f 107;
#X text 780 238 (2πkn = kn períodos completos);
#X text 100 440 Para garantir que a representação digital tenha uma
interpretação unívoca em termos de qual SINAL ANALÓGICO é representado
por uma lista de amostras qualquer \, convenciona-se selecionar como
FREQUÊNCIA PRINCIPAL ou REPRESENTANTE da classe de equivalência acima
a única frequência da lista que pertence ao intervalo [-R/2 \, +R/2].
Essa convenção é parte integrante da conversão DA \, que recria
sinais analógicos sempre a partir das frequências principais. Assim
\, dada uma frequência real f qualquer \, podemos calcular a sua frequência
equivalente que será reconstruída no sinal analógico como f-kR usando
k=round(f/R)., f 107;
#X connect 1 0 2 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116D;
#X obj 100 80 cnv 15 14 14 empty empty Cobertura_da_amostragem_em_função_da_frequência
0 0 0 24 -262144 -38 0;
#X text 100 130 A satisfação da condição de Nyquist \, que estabelece
a necessidade e suficiência da relação F<R/2 para a representação
digital de uma componente senoidal de frequência F sob a taxa de amostragem
R \, é normalmente forçada durante a conversão AD \, mas pode eventualmente
ser violada durante a síntese e processamento de sinais. Uma componente
senoidal de frequência F produzida durante esses processos é classificada
como:, f 107;
#X text 100 520 Obs: não confundir a classificação das componentes
senoidais acima com os processos de SUBAMOSTRAGEM e SUPERAMOSTRAGEM
de sinais \, que correspondem a MUDANÇAS DE TAXA DE AMOSTRAGEM (por
exemplo ao converter um sinal digital com R=44100 Hz em sinais digitais
com R=96000 Hz ou R=8000 Hz)., f 107;
#X text 160 220 - SUPERAMOSTRADA \, quando verifica a condição de
Nyquist F<R/2. Componentes superamostradas são representadas corretamente
no sinal digital \, o que implica que sua reconstrução na conversão
DA será perfeita (ao menos em teoria) \, mesmo que sua "aparência"
no sinal digital sugira o contrário. Esse é o caso dos sinais do
exemplo anterior com frequências F<5 Hz., f 93;
#X text 160 310 - CRITICAMENTE AMOSTRADA \, quando satisfaz F=R/2.
Uma componente com a frequência de Nyquist pode ser representada corretamente
ou não \, estando sujeita a alterações de amplitude em função
da fase inicial \, como ocorre com F=5 Hz no exemplo anterior com seno
e cosseno., f 93;
#X text 160 380 - SUBAMOSTRADA \, quando satisfaz F>R/2. Nesse caso
\, a componente sofrerá o processo de REBATIMENTO (ALIASING) pois
sua representação será idêntica a uma outra frequência F'=F-kR
no intervalo [-R/2 \, +R/2) \, e será REBATIDA (convertida) em uma
componente de frequência F' na conversão DA (pela impossibilidade
de diferenciar as versões digitais de F e F'). No exemplo anterior
\, F=6 \, 7 \, 8 \, 9 \, 10 são rebatidas respectivamente em F'=-4
\, -3 \, -2 \, -1 \, 0 Hz (as frequências negativas explicam o espelhamento
horizontal das formas do seno no exemplo anterior., f 93;
#X connect 1 0 2 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116C;
#X obj 100 80 cnv 15 14 14 empty empty Exemplos_visuais_de_rebatimento
0 0 0 24 -262144 -38 0;
#X obj 103 227 icsm116_grafico \$0 1;
#X obj 324 227 icsm116_grafico \$0 2;
#X obj 542 227 icsm116_grafico \$0 3;
#X obj 760 227 icsm116_grafico \$0 4;
#X obj 978 227 icsm116_grafico \$0 5;
#X obj 103 337 icsm116_grafico \$0 6;
#X obj 324 337 icsm116_grafico \$0 7;
#X obj 542 337 icsm116_grafico \$0 8;
#X obj 760 337 icsm116_grafico \$0 9;
#X obj 978 337 icsm116_grafico \$0 10;
#N canvas 0 0 1035 635 \$0_interface 0;
#X obj 283 317 ofelia f \; a[1] = math.floor(a[1]) \; for k=1 \, 10
do \; local v=ofArray("\$0_"..k.."_"..a[1]) \; local N=v:getSize()
\; for i=0 \, N-1 do \; if a[3]==1 then \; v[i]=a[2]*math.cos(2*math.pi*k*i/N)
\; else v[i]=a[2]*math.sin(2*math.pi*k*i/N) \; end \; end \; end \;
;
#X obj 9 9 tgl 20 0 empty \$0_R10_init R=10_Hz 22 10 0 18 -262130 -1
-1 1 1;
#X obj 109 273 list append;
#X obj 283 273 list append;
#X obj 383 149 t b b f f;
#X msg 109 233 10 1;
#X msg 283 233 100 0;
#X msg 109 188 set 10 \$1 \, bang;
#X msg 283 188 set 100 \$1 \, bang;
#X obj 9 39 tgl 20 0 empty empty R=100_Hz 22 10 0 18 -262130 -1 -1
0 1;
#X obj 9 69 tgl 20 0 empty empty sin/cos 22 10 0 18 -262130 -1 -1 0
1;
#X text 473 188 a mensagem |set ...< inicializa uma lista (bang força
o disparo da lista recém-inicializada), f 41;
#X text 408 275 <- veja o help dos objetos para manipulação de listas
;
#X text 156 12 Preenche os 20 vetores;
#X obj 521 24 loadbang;
#X msg 521 53 1;
#X obj 521 82 s \$0_R10_init;
#X connect 1 0 7 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 4 2 2 1;
#X connect 4 3 3 1;
#X connect 5 0 2 0;
#X connect 6 0 3 0;
#X connect 7 0 5 0;
#X connect 8 0 6 0;
#X connect 9 0 8 0;
#X connect 10 0 4 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X coords 0 -1 1 1 125 100 2 0 0;
#X restore 1055 107 pd \$0_interface;
#N canvas 0 0 697 216 \$0_116B_quadradinhos 0;
#X obj 222 10 hradio 20 1 0 20 empty empty empty 0 -8 0 10 -262144
-1 -1 14;
#X obj 112 126 + 1;
#X obj 13 86 f;
#X floatatom 139 9 5 0 0 0 Freq - -;
#X obj 13 10 tgl 20 0 empty empty LIGA 22 10 0 16 -262144 -1 -1 0 1
;
#X obj 13 46 metro 100;
#X obj 112 165 mod 20;
#X text 57 83 contador circular de 0 a 19;
#X obj 399 59 loadbang;
#X msg 399 88 1;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 0 0;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 6 0 2 1;
#X connect 8 0 9 0;
#X connect 9 0 3 0;
#X coords 0 -1 1 1 640 40 2 0 0;
#X restore 295 550 pd \$0_116B_quadradinhos;
#X text 261 223 1 Hz;
#X text 482 223 2 Hz;
#X text 700 223 3 Hz;
#X text 918 223 4 Hz;
#X text 1136 223 5 Hz;
#X text 261 333 6 Hz;
#X text 482 333 7 Hz;
#X text 700 333 8 Hz;
#X text 918 333 9 Hz;
#X text 1126 333 10 Hz;
#X text 100 460 Este outro exemplo é similar ao efeito de roda de
carro em filme que parece "girar ao contrário" quando está muito
rápida. O quadradinho abaixo percorre circularmente o vetor de R=20
posições numa velocidade de "freq" quadradinhos por atualização
(nesse caso a atualização ocorre 10 vezes por segundo \, mas isso
não é relevante para o efeito). Veja o que ocorre a partir de freq>=R/2=10
quadradinhos por quadro:, f 107;
#X text 100 110 Esse exemplo ilustra sinais a função seno com frequências
1 \, 2 \, ... \, 10 Hz \, amostrados no intervalo [0 \, 1] com R=10
Hz. Conte as "idas e vindas" de cada figura \, e observe o que ocorre
a partir da frequência de R/2=5 Hz. Perceba as correspondências entre
1 Hz e 9 Hz \, 2 Hz e 8 Hz e assim por diante. Você pode checar as
"formas de onda analógicas" correspondentes clicando em R=100 Hz \,
e também pode observar o que ocorre com a função cosseno., f 94
;
#X connect 1 0 2 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116B;
#X obj 100 80 cnv 15 14 14 empty empty Teorema_da_amostragem_(Shannon-Nyquist)
0 0 0 24 -262144 -38 0;
#X text 100 220 O teorema de Shannon-Nyquist estabelece as limitações
no âmbito da frequência para que uma representação digital corresponda
fielmente à representação analógica do sinal. A condição de suficiência
do teorema provê uma GARANTIA de que \, se amostrarmos o sinal com
uma taxa alta o bastante (>=2X Hz) \, então o sinal digital pode ser
usado em uma RECONSTRUÇÃO PERFEITA do sinal analógico \, através
de um procedimento matemático/teórico chamado de INTERPOLAÇÃO IDEAL.
Demonstrar essa parte do teorema não é trivial., f 107;
#X text 100 130 TEOREMA: Para representar digitalmente e SEM PERDAS
um sinal analógico contendo componentes senoidais com frequências
estritamente menores do que X Hz \, é SUFICIENTE tomar pelo menos
2X amostras por segundo. Mais ainda \, para se representar corretamente
todas as componentes senoidais no intervalo [0 \, X) Hz é NECESSÁRIO
tomar pelo menos 2X amostras por segundo., f 107;
#X text 100 330 A condição de necessidade do teorema estabelece que
é IMPOSSÍVEL representar todo e qualquer sinal analógico contendo
componentes senoidais no intervalo [0 \, X] Hz usando uma taxa de amostragem
de MENOS do que 2X Hz. Como INTUIÇÃO \, podemos imaginar que uma
componente senoidal com frequência X HZ exija ao menos 2 amostras
(+1 e -1) para representar cada ciclo \, de onde exigirá 2X amostras
por segundo. Mesmo com R=2X amostras por segundo \, pode acontecer
de "fotografarmos" essa senoide exatamente nos instantes de cruzamento
do zero \, gerando um sinal com duas amostras de valor 0 em cada ciclo:
é exatamente isso o que acontece com a função sen(2π(R/2)t) para
t=n/R \, n=0 \, 1 \, 2 \, ... Esse é um primeiro exemplo de REBATIMENTO
\, que mostra que a frequência R/2 já não possui garantia de ser
preservada no processo de digitalização. Outros exemplos de rebatimento
irão evidenciar a condição de necessidade do teorema de Shannon-Nyquist.
, f 107;
#X text 101 522 No universo dos sinais digitais com taxa de amostragem
R \, a frequência R/2 Hz recebe o nome de FREQUÊNCIA DE NYQUIST \,
e estabelecendo um limite para a fidelidade da representação e reconstrutibilidade
do sinal analógico., f 107;
#X connect 1 0 2 0;
#X coords 0 -1 1 1 180 36 2 0 800;
#X restore 1000 600 pd icsm116A;
#X text 100 250 Nesta seção discutiremos os impactos da definição
do parâmetro TAXA DE AMOSTRAGEM (R \, medida em Hz) na digitalização
do sinal \, e veremos como essa escolha define o CONJUNTO DOS SINAIS
REPRESENTÁVEIS no domínio digital \, em particular o conjunto representável
de FREQUÊNCIAS associadas a COMPONENTES SENOIDAIS., f 107;
#X text 100 350 Um efeito relacionado à taxa de amostragem é o REBATIMENTO
\, um tipo de erro de representação que ocorre quando \, consciente
ou inconscientemente \, introduzimos componentes não representáveis
dentro de um sinal digital a SR Hz. Isso pode acontecer tanto ao sintetizarmos
formas de onda diretamente (como fizemos com os sinais elementares
correspondentes às formas de onda DENTE DE SERRA e QUADRADA) \, quanto
após algum processamento de sinal que produz \, direta ou indiretamente
\, componentes senoidais não representáveis., f 107;
