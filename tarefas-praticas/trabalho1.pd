#N canvas 961 57 959 984 12;
#X text 37 23 Nome: Caio Túlio de Deus Andrade NUSP: 9.79723e+06;
#N canvas 961 56 959 984 exercício 0;
#N canvas 0 50 450 250 (subpatch) 0;
#X array sinal1 88200 float 2;
#X coords 0 1 1000 -1 400 140 1 0 0;
#X restore 683 29 graph;
#X obj 40 27 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 39 117 dac~;
#X obj 40 53 tabplay~ sinal1;
#X obj 252 29 hradio 15 1 0 25 empty empty empty 0 -8 0 10 -262144
-1 -1 23;
#X obj 252 68 ofelia f \; local x = ofArray("sinal1") \; local f =
200*2^(a/12) \; for n = 0 \, x:getSize()-1 do \; x[n] = math.sin(2*math.pi*f*n/44100)
\; end;
#N canvas 0 50 450 250 (subpatch) 0;
#X array sinal2 88200 float 2;
#X coords 0 1 1000 -1 400 140 1 0 0;
#X restore 668 280 graph;
#X obj 23 243 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 20 338 dac~;
#X obj 233 249 hradio 15 1 0 25 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj 21 274 tabplay~ sinal2;
#X obj 232 282 ofelia f \; local sinal1 = ofArray("sinal1") \; local
x = ofArray("sinal2") \; local f = 200*2^(a/12) \; for n = 0 \, x:getSize()-1
do \; x[n] = 0.5*(sinal1[n] + math.sin(2*math.pi*f*n/44100)) \; end
;
#X text 18 423 Notei que se combinarmos sons de frequencia igual \,
o som sai identico ao do sinal 1 (imagino que aconteça um fenômeno
de interferência construtiva devido à igualdade da frequência dos
dois sinais). Mas conforme aumentamos a diferença de frequencia entre
os dois sinais \, começa a surgir uma espécie de som "ondulado".
Quanto maior a diferença de frequência \, mais agressiva é a vibração:
ela passa de uma vibração bem discernível para um som quase "elétrico".
Outra coisa interessante é que \, se aumentarmos mais ainda a diferença
\, a vibração ainda está presente mas também notamos um som agudo
acompanhando a vibração. Acho que da pra notar isso na onda mostrada
no sinal 2 \, onde temos varias oscilações intermediarias intercaladas
com picos, f 145;
#X obj 26 553 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 23 574 ofelia f \; local x = ofArray("sinal1") \; local y =
ofArray("sinal2") \; for n = 0 \, x:getSize()-1 do \; y[n] = x[n]^2
\; end \;;
#X obj 33 806 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 33 831 ofelia f \; local x = ofArray("sinal1") \; local y =
ofArray("sinal2") \; for n = 0 \, x:getSize()-1 do \; y[n] = 4*x[n]^3
- 3*x[n] \; end \;;
#X obj 545 526 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 546 552 ofelia f \; local x = ofArray("sinal1") \; local y =
ofArray("sinal2") \; for n = 0 \, x:getSize()-1 do \; y[n] = x[n]^15
\; end \;;
#X text 30 932 Já esse som me parece ser mais intenso e agudo que
o o som 1;
#X text 539 649 Aqui me parece que todas características musicais
exceto o timbre são mantidas \, ou seja \, a amplitude e a frequência
aparentemente são mantidas.;
#X text 20 681 Essa implementação gera um som muito parecido com
o sinal 1 entretanto \, mais agudo e com menor intensidade sonora.
Inclusive \, se tomarmos a = 0 no sinal 1 e gerarmos o sinal2 \, então
mudarmos a = 12 e gerarmos um novo sinal 1 \, vamos obter um som com
quase a mesma frequência se tocarmos o som resultante de cada sinal
;
#X obj 538 711 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 544 733 ofelia f \; local x = ofArray("sinal1") \; local y =
ofArray("sinal2") \; for n = 0 \, x:getSize()-1 do \; y[n] = 2*math.max(math.min(x[n]
\, 0.5) \, -0.5) \; end \;;
#X text 556 860 Vemos aqui nesse sinal uma transformação de um sinal
senoidal em algo "trapezoidal" \, o som se assemelha um pouco ao de
uma onda quadrada. O sinal gera um som mais intenso do que o som gerado
pelo sinal 1 \, mas aparentemente possui frequencia igual. Acho que
a diferença de intensidade sonora se dá pelo alargamento dos intervalos
de maxima e minima amplitude \, gerando assim uma amplitude media maior.
;
#X obj 1245 439 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1246 465 ofelia f \; local x = ofArray("sinal1") \; local y
= ofArray("sinal2") \; for n = 0 \, x:getSize()-1 do \; y[n] = x[n]
* math.sin(2*math.pi*n/44100) \; end \;;
#X text 1251 590 O som gerado parece ter a mesma altura que o som gerado
pelo sinal1 \, mas apresenta uma certa oscilação na amplitude gerada
\, o que faz sentido \, ja que estamos multiplicando um x[n] por um
valor oscilatorio \, assim a amplitude oscila.;
#X obj 1240 683 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1239 720 ofelia f \; local x = ofArray("sinal1") \; local y
= ofArray("sinal2") \; for n = 0 \, x:getSize()-1 do \; y[n] = x[n]
* math.sin(2*math.pi*100*n/44100) \; end \;;
#X text 1244 845 Aqui temos o mesmo mecanismo de oscilação na amplitude
do sinal que foi abordada no exemplo anterior \, mas nesse caso \,
a frequência da oscilação da amplitude foi aumentada em 100 vezes
\, gerando um som bem diferente. A oscilação é tamanha que a minha
impressão foi de que existem dois sons sendo tocados simultaneamente
;
#X obj 1776 584 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1776 610 ofelia f \; local x = ofArray("sinal1") \; local y
= ofArray("sinal2") \; for n = 0 \, x:getSize()-1 do \; y[n] = math.sin(2*math.pi*(100+x[n])*n/44100)
\; end \;;
#X text 1781 737 Aqui foi gerado um som que \, aparentemente \, tem
uma frequencia variavel. É como se o som fosse ficando mais "aberto"
- como se alguem fizesse um som constante com a boca e fosse abrindo-a
cada vez mais-. Brincando com a frequência do sinal 1 \, se colocarmos
como entrada um número a que não é multiplo de 12 \, o som sai bem
vibrado. Mas se a = 12 \, ou a = 0 \, ele é bem mais limpo.;
#X text 19 526 8.1;
#X text 25 781 8.2;
#X text 574 519 8.3;
#X text 578 713 8.4;
#X text 1312 428 8.5;
#X text 1307 677 8.6;
#X text 1889 558 8.7;
#X text 16 391 7);
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 3 0 2 1;
#X connect 4 0 5 0;
#X connect 7 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 8 0;
#X connect 10 0 8 1;
#X connect 13 0 14 0;
#X connect 15 0 16 0;
#X connect 17 0 18 0;
#X connect 22 0 23 0;
#X connect 25 0 26 0;
#X connect 28 0 29 0;
#X connect 31 0 32 0;
#X restore 72 137 pd exercício 1;
#N canvas 961 56 959 984 exercício 0;
#N canvas 0 50 450 250 (subpatch) 0;
#X array ruido1 88200 float 2;
#X coords 0 1 1000 -1 400 140 1 0 0;
#X restore 509 29 graph;
#X obj 40 27 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 39 117 dac~;
#X obj 252 29 hradio 15 1 0 10 empty empty empty 0 -8 0 10 -262144
-1 -1 6;
#N canvas 0 50 450 250 (subpatch) 0;
#X array ruido2 88200 float 2;
#X coords 0 1 1000 -1 400 140 1 0 0;
#X restore 203 326 graph;
#X obj 46 337 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 45 432 dac~;
#X obj 41 524 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 40 53 tabplay~ ruido1;
#X obj 46 368 tabplay~ ruido2;
#X obj 252 67 ofelia f \; local x = ofArray("ruido1") \; local amp
= 3e-5*(1/3e-5)^(a/9) \; for n = 1 \, x:getSize()-1 do \; x[n] = amp*(math.random()*2-1)
\; end;
#X text 37 222 Notei uma certa linearidade no aumento de intensidade
sonora entre dois valores consecutivos de a \, mas notei que entre
a - 6 e a= 7 a intensidade sonora aumenta bruscamente. E dai em diante
me pareceu que o aumento de volume entre valores de "a"s é maior.
, f 124;
#X obj 41 555 ofelia f \; local x = ofArray("ruido1") \; local y =
ofArray("ruido2") \; y[0] = 0 \; for n = 1 \, x:getSize()-1 do \; y[n]
= 0.5*(x[n] - x[n-1]) end \;;
#X text 12 710 O ruído violeta me parece ter um som mais de chiado
do que o ruído branco \, que é mais distribuído. Parece o som de
gás vazando muito rápido de um tubo.;
#X text 36 498 Ruído violeta;
#X obj 497 516 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 494 490 Ruído vermelho;
#X obj 497 561 ofelia f \; local x = ofArray("ruido1") \; local y =
ofArray("ruido2") \; y[0] = x[0] \; local max = y[0] \; for n = 1 \,
x:getSize()-1 do \; y[n] = x[n] + y[n-1] \; if math.abs(y[n]) > max
then \; max = math.abs(y[n]) \; end \; end \; for n = 0 \, x:getSize()-1
do \; y[n] = y[n]/max \; end \;;
#X f 63;
#X text 479 811 O ruído vermelho me pareceu mais "comportado" do que
os outros dois ruidos: mesmo apresentando uma frequencia alta no ruido
branco \, quando passamos para ruido vermelho o audio não sai estourado
(provavelmente por causa da normalização) O ruido parece barulho
de chuva \, é um som meio abafado.;
#X obj 1036 525 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1031 499 Ruído 3;
#X obj 1036 557 ofelia f \; local x = ofArray("ruido1") \; local y
= ofArray("ruido2") \; y[0] = 0.01*x[0] \; y[1] = 0.01*x[1] + 1.978*y[0]
\; for n = 2 \, x:getSize()-1 do \; y[n] = 0.01*x[n] - 0.01*x[n-2]
+ 1.978*y[n-1] - 0.998 * y[n-2] \; end \;;
#X text 1007 713 Apesar de ser possível notarmos a presença de um
som de ruído \, há também um som mais limpo \, aparentemente periodico
e um tanto agudo. Isso é bem notavel quando a = 9 no sinal 1 Outra
diferença que notei é que esse sinal demora para ser perceptível
\, de todos os ruídos é o ruído com menor intensidade sonora.;
#X connect 1 0 8 0;
#X connect 3 0 10 0;
#X connect 5 0 9 0;
#X connect 7 0 12 0;
#X connect 8 0 2 0;
#X connect 8 0 2 1;
#X connect 9 0 6 0;
#X connect 9 0 6 1;
#X connect 15 0 17 0;
#X connect 19 0 21 0;
#X restore 211 138 pd exercício 2;
